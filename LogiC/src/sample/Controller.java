package sample;import javafx.fxml.FXML;import javafx.scene.SnapshotParameters;import javafx.scene.control.TableView;import javafx.scene.control.TextField;import javafx.scene.input.MouseEvent;import javafx.scene.layout.Pane;import javafx.stage.FileChooser;import javafx.scene.Node;import java.io.*;import java.text.DateFormat;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Arrays;import java.util.Date;import java.util.Scanner;import java.util.regex.Matcher;import java.util.regex.Pattern;public class Controller {    @FXML    private TableView<String[]> myTable;    @FXML    private Pane contentPane;    @FXML    private TextField vh2;    @FXML    private TextField el21;    @FXML    private TextField var;    @FXML    private TextField el11;    @FXML    private TextField el12;    @FXML    private TextField vh1;    private contextMenu cm = new contextMenu(0, null);    private my_screen scr = new my_screen();    private Pattern findChislo = Pattern.compile("\\d{1,2}");    private Pattern checkVhid = Pattern.compile("^[1-2]$");    private int c = 0;    private helper helpers = new helper();    public void initialize(){        helpers.setI(contentPane, myTable);        cm.setFields(el11, el12, el21);    }    /**     * метод, який робить два скріни(панель та таблиця) і     * @throws IOException ексепшн!     */    public void make_screen() throws IOException {        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");        Date date = new Date();        String dat = dateFormat.format(date);        dat = dat.replaceAll(" ", "");        dat = dat.replaceAll(":", "");        dat = dat.replaceAll("/", "");        System.out.println(dat);        scr.saveAsPng(contentPane, dat+"pane",  new SnapshotParameters());        scr.saveAsPng(myTable, dat+"table",  new SnapshotParameters());    }    /**     * додавання елементу     * @param mouseEvent клік по панелі     */    public void onMouseClickedOnMainField(MouseEvent mouseEvent) {        helpers.addOnPanel(mouseEvent.getX(), mouseEvent.getY());        createTable();    }    /**     * функція яка з'єднує елемент зі змінною     */    public void click1() {        Pattern checkVar = Pattern.compile("!?[a-bA-B]");        int el = 0;        int vhid = 0;        String variable = "";        Matcher mFindChiclo = findChislo.matcher(el21.getText());        if (mFindChiclo.find()) {            el = Integer.valueOf(mFindChiclo.group());        }        Matcher mCheckVhid = checkVhid.matcher(vh2.getText());        if (mCheckVhid.find()) {            vhid = Integer.valueOf(mCheckVhid.group());        }        Matcher mCheckVar = checkVar.matcher(var.getText());        if (mCheckVar.find()) {            variable = mCheckVar.group();        }        helpers.setWithVar(el, vhid, variable);        createTable();    }    /**     * з'єднання двох елементів     */    public void click2() {        int e1 = 0, e2 = 0, vhid = 0;        Matcher mFindE1 = findChislo.matcher(el11.getText());        if (mFindE1.find()) {            e1 = Integer.valueOf(mFindE1.group());        }        Matcher mFindE2 = findChislo.matcher(el12.getText());        if (mFindE2.find()) {            e2 = Integer.valueOf(mFindE2.group());        }        Matcher mCheckVhid = checkVhid.matcher(vh1.getText());        if (mCheckVhid.find()) {            vhid = Integer.valueOf(mCheckVhid.group());        }        helpers.setWithEl(e1, e2, vhid);        createTable();    }    /**     * якщо вибрати змінну a, встановить її в поле вводу     * для лінивих     */    public void clickOnA(){var.setText("a");}    /**     * якщо вибрати змінну в, встановить її в поле вводу     * для лінивих     */    public void clickOnB(){var.setText("b");}    /**     * якщо вибрати змінну !a, встановить її в поле вводу     * для лінивих     */    public void clickOnNA(){var.setText("!a");}    /**     * якщо вибрати змінну !в, встановить її в поле вводу     * для лінивих     */    public void clickOnNB(){var.setText("!b");}    /**     * типу очистка всієї панелі     */    public void cleanAres(){        helpers.clean();        createTable();        }    /**     * створення таблиці істинності.     */    public void createTable(){        helpers.creatable();        }    /**     * збереження поточної схеми в файлі з рандомною назвою     * @throws IOException тхровс іоекцепшн бо треба     */    public void saveChemu() throws IOException {        String name = "1abcdefghijklmnopqrstuxyzABCDEFGHIJKLMNOPQRSTUXYZ12345678901";        String trueName = "";        String datasave = "";        ArrayList<element> ge = helpers.getElList();        for(int i = 0; i<=ge.size()-1; i++){            element nonull = ge.get(i);            datasave += nonull.getIdEl() + "," + nonull.getType() + "," + nonull.getLayoutX() + "," + nonull.getLayoutY() + ",";            if(nonull.getEls()[0]!=null){                datasave+=nonull.getEls()[0].getIdEl() + ",";            } else if(!nonull.getC1().equals("")){datasave+=nonull.getC1() + ",";            } else datasave += "-,";            if(nonull.getEls()[1]!=null){                datasave+=nonull.getEls()[1].getIdEl() + ",";            } else if(!nonull.getC2().equals("")){datasave+=nonull.getC2() + ",";            } else datasave += "-,";            if(nonull.getNextEl() != null){            datasave += nonull.getNextEl().getIdEl() + "N\r\n";            } else datasave += "-N\r\n";        }        for(int y = 0; y<=5; y++){            double rnd1 = Math.random()*58;            trueName+=name.substring( (int) rnd1, (int) rnd1+1);            System.out.println("rnd " + rnd1 + "\ntrueName " + trueName);        }        String dir1 = trueName + ".txt";        FileWriter fW = new FileWriter("src/sample/save/" + dir1);        fW.write(datasave);        fW.close();    }    /**     * виклик функції з хелперс, яка завантажує схему з .txt файлу     * @throws FileNotFoundException тхровс філенотфоунд бо також треба     */    public void myLoad() throws FileNotFoundException {        helpers.loadFromFile();        createTable();    }    /**     * видалення елементу та його ліній з панелі     * викликається з контекстного меню при кліку на "Видалити"     * @see contextMenu     */    public void removeSome(){        for(int i = 0; i<=helpers.getElList().size()-1; i++){        contentPane.getChildren().removeAll(helpers.getElList().get(i).getLineA());        }        contentPane.getChildren().removeAll(helpers.getElList());    }}